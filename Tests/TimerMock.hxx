#pragma once 

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "Timer.h"
#include "gmock/gmock.h"

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

class TimerMock final : public Timer <TimerMock>
{
    public:
	    struct Config
	    {
		    double Divider;
		    double InterruptInSec;
		    ETimer eTimer;
	    };

		TimerMock (const Config v_config) { }
        ~TimerMock () = default;
		
		MOCK_METHOD0 (Start     , void (void));
		MOCK_METHOD0 (Stop      , void (void));
		MOCK_METHOD0 (StartIsr  , void (void));
		MOCK_METHOD0 (StopIsr   , void (void));
		MOCK_METHOD1 (SetCounter, void (uint32_t v_counter));
		MOCK_METHOD0 (GetCounter, void (void));	
		MOCK_METHOD0 (init      , void (void));
		MOCK_METHOD0 (deInit    , void (void));

	private:
	    const Config config;
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////